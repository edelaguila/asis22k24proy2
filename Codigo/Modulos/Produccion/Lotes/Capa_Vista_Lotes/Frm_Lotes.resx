<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_Ayuda.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        uv//2br//9m6///Zuv//2br/+M6o/92iYv3AdBT1vXAN4LlrBWmAgAACAAAAAAAAAAC5agNjxHsf9e29
        i///2Ln//9m6///Zuv//2br//9m6///Zuv//2br//9m6///Zuv//2br/+9Ow/7xuCfq8bgn6+9Ow///Z
        uv//2br//9m6///Zuv//2br//9m6///Zuv//2br//9m6///Yuf/tvYv/xHse9bdoAGAAAAAAAAAAALhp
        AmjLhzL0/9m6///Zuv//2br//9m6///Zuv//2br//9m6///Zuv//2br/88ab/9aYT/i8bgn2vXANyL1w
        Dci8bgn21phP+PPGm///2br//9m6///Zuv//2br//9m6///Zuv//2br//9m6///Zuv/LhjL0umoCZwAA
        AAAAAAAAqlUABrxuCuTquIT//9m6///Zuv//2br//9m6///Zuv/91bT/57R8/8iBKvG7bQnvumsHjbZm
        ACMAAAAAAAAAALZkABy7bgZ7u20J6sN6HfHjrW/+/NSx///Zuv//2br//9m6///Zuv//2br/7LqH/7tt
        Cea/YAAIAAAAAAAAAAAAAAAAuWkASb90FPT91rX//9m6///Zuv/wwZP/05NH+LttB/i9cQ2+uWgATKpV
        AAO2bQAHt2cASrhnAG+4ZwBvt2cASqpVAAaqVQADuWgATL1vDLy7bAf30pJF9vDBk///2br//9m6//3W
        tf+/dBT0uWkASQAAAAAAAAAAAAAAAAAAAAAAAAAAvG4LuticVvvgqGn+wngY8rxtCue7bAR7uGYAGQAA
        AAD/AAABumwFb7ttB/HIgSjw1plQ+taZUPrIgSjwu20H8blrBW7/AAABAAAAALhmABm7bAR7vG0K58J4
        GPLgqGn+2JxW+7xuC7oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1awAfuWoD87hoAP+4ZwDPuGgAXbpn
        ACUAAAAA/wAAAb1wDKnGfST09Mie///Zuv//2br//9m6///Zuv/0yJ7/xn0k9LxvDKf/AAABAAAAALpn
        ACW4aABduGcAz7hoAP+5agPztWsAHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC/YAAIuWoAOrdn
        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
        Af//wAP//8AD///gB///+B////////////8=
</value>
  </data>
</root>